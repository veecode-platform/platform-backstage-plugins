[
    {
        "id": "01",
        "label": "Modernize with containerization and microservices",
        "prompt": "Analyze the legacy application to identify opportunities for modernization through containerization and transitioning to a microservices architecture. Provide a detailed plan and generate well-structured, low-coupling Dockerfiles, Kubernetes manifests, and example microservices code adhering to Cloud Native principles. Ensure the response includes modular, maintainable code ready for a pull request."
    },
    {
        "id": "02",
        "label": "Implement observability and monitoring",
        "prompt": "Propose and generate configurations to introduce observability practices, including structured logging, metrics collection, distributed tracing, and real-time monitoring. Provide detailed and modular configurations for tools like Prometheus, Grafana, or OpenTelemetry. Include clean, well-documented code snippets that integrate seamlessly into the application and are ready for submission as a pull request."
    },
    {
        "id": "03",
        "label": "Validate and improve test coverage",
        "prompt": "Evaluate the application's current test suite, identify gaps in test coverage, and suggest or generate additional tests. Ensure the tests follow clean code principles, are well-structured, and target critical paths and edge cases. Provide examples using appropriate testing frameworks and include files ready to be integrated and submitted as a pull request."
    },
    {
        "id": "04",
        "label": "Modernize dependencies and security standards",
        "prompt": "Analyze the application's dependencies and frameworks, recommending updates to ensure compatibility with modern standards. Generate clean and modular code that applies critical security patches and improves overall stability and performance. Provide a detailed explanation of changes and ensure files are structured for direct submission as a pull request."
    },
    {
        "id": "05",
        "label": "Optimize performance with modern tools",
        "prompt": "Identify performance bottlenecks in the application and recommend modern tools, utility libraries, and architectural patterns to enhance responsiveness, scalability, and efficiency. Provide well-documented and modular code improvements targeting specific bottlenecks. Ensure all changes are aligned with modern best practices and are ready for integration as a pull request."
    },
    {
        "id": "06",
        "label": "Adopt DevOps and Cloud Native infrastructure",
        "prompt": "Suggest strategies for adopting DevOps practices and building a Cloud Native infrastructure, including CI/CD pipelines, container orchestration, and Infrastructure as Code (IaC). Generate modular and structured configurations (e.g., for GitHub Actions, GitLab CI/CD, Terraform, or Helm) with clean, reusable code ready for submission as a pull request."
    },
    {
        "id": "07",
        "label": "Standardize and align with modern best practices",
        "prompt": "Provide recommendations to refactor and standardize the application codebase, adhering to modern development practices, clean code principles, and consistent style guides. Generate well-documented refactored code with reduced coupling and improved maintainability. Ensure the response includes files structured for direct integration and submission as a pull request."
    }
]
